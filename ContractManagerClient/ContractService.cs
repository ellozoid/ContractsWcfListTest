//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContractsService.Models
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://schemas.datacontract.org/2004/07/ContractsService.Models")]
    public partial class Contract : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime CreateDateField;
        
        private int IdField;
        
        private System.DateTime ModifyDateField;
        
        private int NumberField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get
            {
                return this.CreateDateField;
            }
            set
            {
                this.CreateDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyDate
        {
            get
            {
                return this.ModifyDateField;
            }
            set
            {
                this.ModifyDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IContractService")]
public interface IContractService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/GetContracts", ReplyAction="http://tempuri.org/IContractService/GetContractsResponse")]
    ContractsService.Models.Contract[] GetContracts();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/GetContracts", ReplyAction="http://tempuri.org/IContractService/GetContractsResponse")]
    System.Threading.Tasks.Task<ContractsService.Models.Contract[]> GetContractsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/UpdateContract", ReplyAction="http://tempuri.org/IContractService/UpdateContractResponse")]
    bool UpdateContract(ContractsService.Models.Contract contract);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/UpdateContract", ReplyAction="http://tempuri.org/IContractService/UpdateContractResponse")]
    System.Threading.Tasks.Task<bool> UpdateContractAsync(ContractsService.Models.Contract contract);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/AddContract", ReplyAction="http://tempuri.org/IContractService/AddContractResponse")]
    void AddContract(ContractsService.Models.Contract contract);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractService/AddContract", ReplyAction="http://tempuri.org/IContractService/AddContractResponse")]
    System.Threading.Tasks.Task AddContractAsync(ContractsService.Models.Contract contract);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IContractServiceChannel : IContractService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ContractServiceClient : System.ServiceModel.ClientBase<IContractService>, IContractService
{
    
    public ContractServiceClient()
    {
    }
    
    public ContractServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public ContractServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ContractServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public ContractServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public ContractsService.Models.Contract[] GetContracts()
    {
        return base.Channel.GetContracts();
    }
    
    public System.Threading.Tasks.Task<ContractsService.Models.Contract[]> GetContractsAsync()
    {
        return base.Channel.GetContractsAsync();
    }
    
    public bool UpdateContract(ContractsService.Models.Contract contract)
    {
        return base.Channel.UpdateContract(contract);
    }
    
    public System.Threading.Tasks.Task<bool> UpdateContractAsync(ContractsService.Models.Contract contract)
    {
        return base.Channel.UpdateContractAsync(contract);
    }
    
    public void AddContract(ContractsService.Models.Contract contract)
    {
        base.Channel.AddContract(contract);
    }
    
    public System.Threading.Tasks.Task AddContractAsync(ContractsService.Models.Contract contract)
    {
        return base.Channel.AddContractAsync(contract);
    }
}
